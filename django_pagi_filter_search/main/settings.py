"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

#? When we share projects to public environments, we store project-specific KEYs such as SECRET_KEY in the .env file. 
#? To access the SECRET_KEY in the .env file, we install pip install python-decouple and import the config.
SECRET_KEY = config("SECRET_KEY") 

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # myApp
    'student_api',

    # third pary app
    'rest_framework',  # We installed Rest Framework to make django work like api : pip install djangorestframework
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'main.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#? Pagination :  https://www.django-rest-framework.org/api-guide/pagination/


#? The REST_FRAMEWORK dictionary below is the global space for pagination definition, affecting the entire project. 
#? A separate page of pagination.py must be opened to make it private.
REST_FRAMEWORK = {
   #! 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
   #! 'PAGE_SIZE': 10,  
   #? It is the number of data to be displayed on 1 page, it can be changed.
    # 'DEFAULT_PAGINATION_CLASS':'rest_frameworkpagination.LimitOffsetPagination',
    # 'PAGE_SIZE': 20,
    #? It is the number of data to be displayed on 1 page, it can be changed.
    #* 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.CursorPagination',  #? To use CursorPagination, we need to create the fields created in models.py.
    #* 'PAGE_SIZE': 30,   
} 


#! To use filters:
# 1- pip install django-filter
# 2- pip freeze > requirements.txt
# 3- INSTANCE_APPS = [... , 'django_filters',
# ]

#Filter : https://www.django-rest-framework.org/api-guide/filtering/
REST_FRAMEWORK = {
    # 'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
    #? To make it custom, we can call views.py and add properties

}